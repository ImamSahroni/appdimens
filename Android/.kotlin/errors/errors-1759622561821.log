kotlin version: 2.2.20
error message: java.lang.RuntimeException: Exception while generating code for:
FUN name:resolve-D9Ej5fM visibility:private modality:FINAL returnType:androidx.compose.ui.unit.Dp
  VALUE_PARAMETER kind:DispatchReceiver name:<this> index:0 type:com.appdimens.sdps.Scaled
  annotations:
    SuppressLint(value = ["ConfigurationScreenWidthHeight"] type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String)
    Composable
  BLOCK_BODY
    VAR name:configuration type:android.content.res.Configuration [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.res.Configuration origin=GET_PROPERTY
        ARG <this>: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalConfiguration> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.res.Configuration> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.res.Configuration> origin=GET_PROPERTY
    VAR name:currentUiModeType type:com.appdimens.library.UiModeType [val]
      CALL 'public final fun fromConfiguration (uiMode: kotlin.Int): com.appdimens.library.UiModeType declared in com.appdimens.sdps.AppDimensSdpKt' type=com.appdimens.library.UiModeType origin=null
        ARG uiMode: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:uiMode type:kotlin.Int visibility:public declared in android.content.res.Configuration' type=kotlin.Int superQualifierSymbol=android.content.res.Configuration origin=null
          receiver: GET_VAR 'val configuration: android.content.res.Configuration [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=android.content.res.Configuration origin=null
    VAR name:foundEntry type:com.appdimens.sdps.CustomDpEntry? [val]
      CALL 'public final fun firstOrNull <T> (<this>: kotlin.collections.Iterable<T of kotlin.collections.CollectionsKt.firstOrNull>, predicate: kotlin.Function1<T of kotlin.collections.CollectionsKt.firstOrNull, kotlin.Boolean>): T of kotlin.collections.CollectionsKt.firstOrNull? [inline] declared in kotlin.collections.CollectionsKt' type=com.appdimens.sdps.CustomDpEntry? origin=null
        TYPE_ARG T: com.appdimens.sdps.CustomDpEntry
        ARG <this>: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:sortedCustomEntries type:kotlin.collections.List<com.appdimens.sdps.CustomDpEntry> visibility:private [final]' type=kotlin.collections.List<com.appdimens.sdps.CustomDpEntry> origin=null
          receiver: GET_VAR '<this>: com.appdimens.sdps.Scaled declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.sdps.Scaled origin=IMPLICIT_ARGUMENT
        ARG predicate: BLOCK type=kotlin.Function1<com.appdimens.sdps.CustomDpEntry, kotlin.Boolean> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun resolve_D9Ej5fM$lambda$0 ($currentUiModeType: com.appdimens.library.UiModeType, $configuration: android.content.res.Configuration, entry: com.appdimens.sdps.CustomDpEntry): kotlin.Boolean declared in com.appdimens.sdps.Scaled' type=kotlin.Function1<com.appdimens.sdps.CustomDpEntry, kotlin.Boolean> origin=INLINE_LAMBDA reflectionTarget=null
            ARG $currentUiModeType: GET_VAR 'val currentUiModeType: com.appdimens.library.UiModeType [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.library.UiModeType origin=null
            ARG $configuration: GET_VAR 'val configuration: android.content.res.Configuration [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=android.content.res.Configuration origin=null
    VAR name:dpToUse type:androidx.compose.ui.unit.Dp [val]
    VAR name:finalQualifier type:com.appdimens.library.DpQualifier [val]
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            ARG arg0: GET_VAR 'val foundEntry: com.appdimens.sdps.CustomDpEntry? [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.sdps.CustomDpEntry? origin=null
            ARG arg1: CONST Null type=kotlin.Nothing? value=null
        then: BLOCK type=kotlin.Unit origin=null
          SET_VAR 'val dpToUse: androidx.compose.ui.unit.Dp [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=kotlin.Unit origin=EQ
            CALL 'public final fun getCustomValue-D9Ej5fM (): androidx.compose.ui.unit.Dp declared in com.appdimens.sdps.CustomDpEntry' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
              ARG <this>: TYPE_OP type=com.appdimens.sdps.CustomDpEntry origin=IMPLICIT_CAST typeOperand=com.appdimens.sdps.CustomDpEntry
                GET_VAR 'val foundEntry: com.appdimens.sdps.CustomDpEntry? [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.sdps.CustomDpEntry? origin=null
          SET_VAR 'val finalQualifier: com.appdimens.library.DpQualifier [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=kotlin.Unit origin=EQ
            BLOCK type=com.appdimens.library.DpQualifier origin=FOLDED_ELVIS
              WHEN type=com.appdimens.library.DpQualifier origin=FOLDED_ELVIS
                BRANCH
                  if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                    ARG arg0: COMPOSITE type=kotlin.Boolean origin=null
                      VAR IR_TEMPORARY_VARIABLE name:tmp0_safe_receiver type:com.appdimens.library.DpQualifierEntry? [val]
                        CALL 'public final fun <get-dpQualifierEntry> (): com.appdimens.library.DpQualifierEntry? declared in com.appdimens.sdps.CustomDpEntry' type=com.appdimens.library.DpQualifierEntry? origin=GET_PROPERTY
                          ARG <this>: TYPE_OP type=com.appdimens.sdps.CustomDpEntry origin=IMPLICIT_CAST typeOperand=com.appdimens.sdps.CustomDpEntry
                            GET_VAR 'val foundEntry: com.appdimens.sdps.CustomDpEntry? [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.sdps.CustomDpEntry? origin=null
                      CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                          ARG arg0: GET_VAR 'val tmp0_safe_receiver: com.appdimens.library.DpQualifierEntry? [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.library.DpQualifierEntry? origin=null
                          ARG arg1: CONST Null type=kotlin.Nothing? value=null
                    ARG arg1: COMPOSITE type=kotlin.Boolean origin=null
                      VAR IR_TEMPORARY_VARIABLE name:tmp1_elvis_lhs type:com.appdimens.library.DpQualifier [val]
                        CALL 'public final fun <get-type> (): com.appdimens.library.DpQualifier declared in com.appdimens.library.DpQualifierEntry' type=com.appdimens.library.DpQualifier origin=GET_PROPERTY
                          ARG <this>: TYPE_OP type=com.appdimens.library.DpQualifierEntry origin=IMPLICIT_CAST typeOperand=com.appdimens.library.DpQualifierEntry
                            GET_VAR 'val tmp0_safe_receiver: com.appdimens.library.DpQualifierEntry? [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.library.DpQualifierEntry? origin=null
                      CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
                        ARG <this>: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
                          ARG arg0: GET_VAR 'val tmp1_elvis_lhs: com.appdimens.library.DpQualifier [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.library.DpQualifier origin=null
                          ARG arg1: CONST Null type=kotlin.Nothing? value=null
                  then: GET_VAR 'val tmp1_elvis_lhs: com.appdimens.library.DpQualifier [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.library.DpQualifier origin=null
                BRANCH
                  if: CONST Boolean type=kotlin.Boolean value=true
                  then: GET_FIELD 'FIELD FIELD_FOR_ENUM_ENTRY name:SMALL_WIDTH type:com.appdimens.library.DpQualifier visibility:public [final,static] declared in com.appdimens.library.DpQualifier' type=com.appdimens.library.DpQualifier origin=null
      BRANCH
        if: CONST Boolean type=kotlin.Boolean value=true
        then: BLOCK type=kotlin.Unit origin=null
          SET_VAR 'val dpToUse: androidx.compose.ui.unit.Dp [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=kotlin.Unit origin=EQ
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:initialBaseDp type:androidx.compose.ui.unit.Dp visibility:private [final]' type=androidx.compose.ui.unit.Dp origin=null
              receiver: GET_VAR '<this>: com.appdimens.sdps.Scaled declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.sdps.Scaled origin=IMPLICIT_ARGUMENT
          SET_VAR 'val finalQualifier: com.appdimens.library.DpQualifier [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=kotlin.Unit origin=EQ
            GET_FIELD 'FIELD FIELD_FOR_ENUM_ENTRY name:SMALL_WIDTH type:com.appdimens.library.DpQualifier visibility:public [final,static] declared in com.appdimens.library.DpQualifier' type=com.appdimens.library.DpQualifier origin=null
    VAR name:baseIntDp type:kotlin.Int [val]
      CALL 'public open fun toInt (): kotlin.Int declared in kotlin.Float' type=kotlin.Int origin=null
        ARG <this>: CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=kotlin.Float origin=null
          TYPE_ARG T: androidx.compose.ui.unit.Dp
          TYPE_ARG R: kotlin.Float
          ARG v: GET_VAR 'val dpToUse: androidx.compose.ui.unit.Dp [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=androidx.compose.ui.unit.Dp origin=null
    RETURN type=kotlin.Nothing from='private final fun resolve-D9Ej5fM (): androidx.compose.ui.unit.Dp declared in com.appdimens.sdps.Scaled'
      CALL 'public final fun toDynamicScaledDp (<this>: kotlin.Int, qualifier: com.appdimens.library.DpQualifier): androidx.compose.ui.unit.Dp declared in com.appdimens.sdps.AppDimensSdpKt' type=androidx.compose.ui.unit.Dp origin=null
        ARG <this>: GET_VAR 'val baseIntDp: kotlin.Int [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=kotlin.Int origin=null
        ARG qualifier: GET_VAR 'val finalQualifier: com.appdimens.library.DpQualifier [val] declared in com.appdimens.sdps.Scaled.resolve-D9Ej5fM' type=com.appdimens.library.DpQualifier origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:53)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:46)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:439)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:164)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile(JvmIrCodegenFactory.kt:446)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:413)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:425)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:89)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:27)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:102)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:22)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:53)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:109)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:68)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:79)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:45)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:90)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:352)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:176)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunnerBase.runCompiler(IncrementalJvmCompilerRunnerBase.kt:39)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:499)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:416)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:128)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:684)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:94)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1810)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.res.Configuration origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:82)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:589)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:729)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:530)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:535)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:134)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:232)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:129)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	... 44 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:129)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction$lambda$0(SourceCompilerForInline.kt:98)
	at org.jetbrains.kotlin.codegen.inline.InlineCache.computeMethodBytes(InlineCache.kt:90)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:93)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:65)
	... 58 more


